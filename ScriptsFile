start.sh
#!/bin/sh
set -e
count ='ps -ef | grep es_health | grep bin | wc -l | awk 'print$1''

if[$count -eq 0]; then
   echo -n "starting es.."
# /home/es/es/los/clusterName.log   --cluster.name =clusterNode
   CONSOLE_LOG_FILE=path to log foldrt/clusterName.log 
   nohup ./es_health.sh >$CONSOLE_LOG_FILE 2>&1 &
   isStarted= 'tail -n 500 $CONSOLE_LOF_FILE | grep -i Started| wc -l'
   until [$isStarted -eq 1]
   do
    isStarted= 'tail -n 500 $CONSOLE_LOF_FILE | grep -i Started| wc -l'
    echo -n "."
    sleep 1
   done
   echo -e  "\n Es started"
   exit 0
else
   echo "Es is running"
   exit 1
fi   


stop.sh
#!/bin/sh
set -e
count ='ps -ef | grep $USER |grep elasticsearch| grep java | wc -l | awk 'print$1''
if[$count -eq 0]; then
   echo -n "es is not running"
else  
   ps -ef | grep $USER |grep elasticsearch| grep java | awk 'print$2' | xargs - kill {}
   echo "es stoped"
fi   
   

show-status.sh
#!/bin/sh
set -e
count ='ps -ef | grep $USER |grep es_health| grep java | wc -l | awk 'print$1''
if[$count -eq 0]; then
   echo -n "es health is not running"
else  
   echo "es health is running"
fi 

count ='ps -ef | grep $USER |grep elasticsearch| grep java | wc -l | awk 'print$1''
if[$count -eq 0]; then
   echo -n "es is not running"
else  
   echo "es  is not running"
fi 


es_health.sh
#!/bin/sh
set -e
CMD=./elasticsearch


init.sh 
#To create index & max result  window size,max term count
#!/bin/sh
set -e

curl -vvv -u user:password -XPUT $("hostname"):9200/employee_index
curl -vvv -u user:password -XPUT $("hostname"):9200/employee_index/_setting  -H ''
